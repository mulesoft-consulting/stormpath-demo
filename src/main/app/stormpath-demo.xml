<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:stormpath="http://www.mulesoft.org/schema/mule/stormpath"
    xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
    xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/stormpath http://www.mulesoft.org/schema/mule/stormpath/current/mule-stormpath.xsd">

    <configuration doc:name="Configuration">
        <expression-language>
            <import class="org.mule.modules.stormpath.StormpathUtils" />
            <import class="org.mule.modules.stormpath.model.Account" />
            <import class="org.mule.modules.stormpath.model.Email" />
        </expression-language>
    </configuration>

    <https:connector name="httpsConnector" doc:name="HTTPS">
        <service-overrides sessionHandler="org.mule.session.NullSessionHandler" />
        <https:tls-key-store path="keystore.jks" keyPassword="${keystore.password}"
            storePassword="${keystore.password}" />
    </https:connector>

    <stormpath:config name="Stormpath" apiKeyId="${stormpath.apiKeyId}"
        apiKeySecret="${stormpath.apiKeySecret}" doc:name="Stormpath" />

    <catch-exception-strategy name="extractCauseMessageExceptionStrategy"
        doc:name="Catch Exception Strategy">
        <set-payload value="#[exception.cause.message]" doc:name="Set Payload" />
        <json:object-to-json-transformer doc:name="Object to JSON" />
    </catch-exception-strategy>

    <flow name="attemptLogin" doc:name="Attempt Login">
        <https:inbound-endpoint exchange-pattern="request-response"
            connector-ref="httpsConnector" host="${https.host}" port="${https.port}"
            path="demo/api/attempt-login" doc:name="HTTPS" />

        <http:body-to-parameter-map-transformer
            doc:name="Body to Parameter Map" />

        <set-payload
            value="#[StormpathUtils.createBasicLoginAttempt(message.payload.username, message.payload.password)]"
            doc:name="Set Payload" />

        <stormpath:attempt-login config-ref="Stormpath"
            applicationId="${stormpath.applicationId}" doc:name="Attempt Login" />

        <json:object-to-json-transformer doc:name="Object to JSON" />

        <exception-strategy ref="extractCauseMessageExceptionStrategy"
            doc:name="Extract Cause Message Exception Strategy" />
    </flow>

    <flow name="createAccount" doc:name="Create Account">
        <https:inbound-endpoint exchange-pattern="request-response"
            connector-ref="httpsConnector" host="${https.host}" port="${https.port}"
            path="demo/api/create-account" doc:name="HTTPS" />

        <http:body-to-parameter-map-transformer
            doc:name="Body to Parameter Map" />

        <expression-component doc:name="Expression"><![CDATA[
          message.payload =
            new Account()
               .withUsername(message.payload.username)
               .withEmail(message.payload.email)
               .withPassword(message.payload.password)
               .withGivenName(message.payload.givenName)
               .withSurname(message.payload.surname);
        ]]></expression-component>

        <stormpath:create-account config-ref="Stormpath"
            directoryId="${stormpath.directoryId}" doc:name="Create Account" />

        <async>
            <all>
                <flow-ref name="provisionBugTrackingAccount" doc:name="Provision Bug Tracking Account" />
                <flow-ref name="provisionCRMAccount" doc:name="Provision CRM Account" />
            </all>
        </async>

        <json:object-to-json-transformer doc:name="Object to JSON" />

        <exception-strategy ref="extractCauseMessageExceptionStrategy"
            doc:name="Extract Cause Message Exception Strategy" />
    </flow>

    <flow name="provisionBugTrackingAccount" doc:name="Provision Bug Tracking Account">
        <logger level="INFO"
            message="Provisionning Bug Tracking Account for: #[message.payload.email]" />
    </flow>

    <flow name="provisionCRMAccount" doc:name="Provision CRM Account">
        <logger level="INFO" message="Provisionning CRM Account for: #[message.payload.email]" />
    </flow>

    <flow name="resetPassword" doc:name="Reset Password">
        <https:inbound-endpoint exchange-pattern="request-response"
            connector-ref="httpsConnector" host="${https.host}" port="${https.port}"
            path="demo/api/reset-password" doc:name="HTTPS" />

        <http:body-to-parameter-map-transformer
            doc:name="Body to Parameter Map" />

        <set-payload value="#[new Email().withEmail(message.payload.email)]"
            doc:name="Set Payload" />

        <stormpath:create-password-reset-token
            config-ref="Stormpath" applicationId="${stormpath.applicationId}" doc:name="Create Password Reset Token" />

        <json:object-to-json-transformer doc:name="Object to JSON" />

        <exception-strategy ref="extractCauseMessageExceptionStrategy"
            doc:name="Extract Cause Message Exception Strategy" />
    </flow>

    <flow name="homePage" doc:name="homePage">
        <https:inbound-endpoint exchange-pattern="request-response"
            connector-ref="httpsConnector" host="${https.host}" port="${https.port}" path="demo"
            doc:name="HTTPS" />
        <http:static-resource-handler resourceBase="${app.home}/docroot"
            defaultFile="index.html" doc:name="HTTP Static Resource Handler" />
    </flow>
</mule>